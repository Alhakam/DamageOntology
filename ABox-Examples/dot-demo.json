{
    "project": {
        "title": "DOT - Damage Topology Ontology",
        "creator": "Al-Hakam Hamdam & Mathias Bonduel"
    },
    "tabs": [
        {
            "title": "1: First dataset - modeling methods for damages",
            "query": "PREFIX dot: <https://w3id.org/dot#>\nPREFIX inst: <http://ex.org/alhak/data/D1#>\nPREFIX bot: <https://w3id.org/bot#>\n\nCONSTRUCT {\n\t?s ?p ?o .\n}\nWHERE { \n  \t?s ?p ?o .\n  \tFILTER (?o != owl:Thing)\n}",
            "triples": "@prefix dot: <https://w3id.org/dot#> .\n@prefix inst: <http://ex.org/alhak/data/D1#> .\n@prefix bot: <https://w3id.org/bot#> .\n\ninst:structuralFrameA a bot:Element ;\n\tbot:hasSubElement inst:frameA-beam1 , inst:frameA-column1 , inst:frameA-column2 .\ninst:frameA-beam1 a bot:Element .\ninst:frameA-column1 a bot:Element .\ninst:frameA-column2 a bot:Element .\n\n# Method 1\ninst:frameA-column1 dot:hasDamageElement inst:damageElement1 . \n# Method 2\ninst:frameA-column2 dot:hasDamageArea inst:damageArea2 .\n# Method 3\ninst:frameA-beam1 dot:hasDamageArea inst:damageArea3 .\ninst:damageArea3 dot:aggregatesDamageElement inst:damageElement3-1 , inst:damageElement3-2 .\n# Method 4\ninst:frameA-beam1 dot:hasDamageArea inst:damageArea4 .\ninst:damageArea4 dot:aggregatesDamagePattern inst:damagePattern4 .\n# Method 5\ninst:frameA-column2 dot:hasDamageArea inst:damageArea5 .\ninst:damageArea5 dot:aggregatesDamagePattern inst:damagePattern5 .\ninst:damagePattern5 dot:groupsDamageElement inst:damageElement5-1 .\ninst:damageElement5-1 dot:adjacentDamageElement inst:damageElement5-2 , inst:damageElement5-3 .",
            "description": "## SPARQL-visualizer for DOT and extensions - first sample dataset\n\nWelcome in this SPARQL-visualizer example for the [Damage Topology Ontology (DOT)](https://w3id.org/dot#) and its [extensions (CDO, DMO and D-ASB-ING)](https://github.com/Alhakam/dot/tree/master/Extension). \n\nTo visualize the sample triples of this first sample dataset, load the triples and the ontologies in a running Stardog database as described below.\n\n### Load sample ABox triples in Stardog\nMake sure you have a Stardog instance running (defaults to port 5820) with an empty database (let's call it 'test'), so that nothing important can be deleted. Then click the \"Switch to triplestore\" button and type in \"http://localhost:5820\" as endpoint and \"test\" as database. If you haven't changed the username and password they both default to \"admin\". Click on \"Wipe graph\" to delete older sample data of the default graph. Then click on \"Load dataset\", to load the sample triples in the Stardog database.\n\n### Load DOT ontology (and extensions) in Stardog\nAs most queries in the following tabs use DOT (and extensions) for reasoning, the ontology has to be available in the Stardog database created earlier. Add the [DOT ontology](https://raw.githubusercontent.com/Alhakam/DamageOntology/master/dot.ttl) and its [extensions](https://github.com/Alhakam/dot/tree/master/Extension) to a named graph `http://ontologies.org/dot/` in your [running Stardog database](localhost:5820)\n\n## First dataset: Five modeling methods to define a damaged construction component\n\nThe first sample of Turtle triples contains one damaged structural building component (`inst:structuralFrameA`) consisting of three parts: one beam and two columns. The sample demonstrates 5 different methods to model damages, depending on the speed/easiness of modelling and the degree of detail.\n\nThis query visualizes this damaged bridge component and its connected `dot:DamageElement`, `dot:DamageArea` and `dot:DamagePattern` instances.\n\nWithout reasoning, the query will return the instances as they are asserted in the sample of Turtle triples.\n\nWith an active reasoner, additional relations will be inferred, based on the definitions in the loaded DOT ontology. These additional triples make it more intuitive and easier to query the data.\n\n** NOTE!** Some of these tabs (incl. this one) demand the use of reasoning. Do not forget to turn reasoning on in the query component of the SPARQL-visualizer (lower right hand corner). If the query returns no results, press the \"Reset\" button in the query component and reactivate \"Reasoning\"."
        },
        {
            "title": "------",
            "query": "",
            "triples": "",
            "description": ""
        },
        {
            "title": "2a: Second dataset - full sample",
            "query": "PREFIX dot: <https://w3id.org/dot#>\nPREFIX brot: <https://wisib.de/ontologie/brot#>\nPREFIX inst: <http://ex.org/alhak/data/D1#>\n\nCONSTRUCT {\n  \t?component ?hasDamage ?damage .\n  \t?component a ?componentType .\n  \t?damage a ?damageType .\n}\nWHERE {\n\t?component ?hasDamage ?damage .\n  \t?component a ?componentType .\n  \t?damage a ?damageType .\n  \tFILTER (?hasDamage IN (dot:hasDamageArea , dot:hasDamageElement))\n  \tFILTER (?damageType IN (dot:DamageArea , dot:DamageElement))\n  \tFILTER (?componentType != owl:Thing)\n}",
            "triples": "@prefix inst: <http://ex.org/alhak/data/D1#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n@prefix schema: <https://schema.org/> .\n@prefix prov: <http://www.w3.org/ns/prov#> .\n@prefix dmo: <https://w3id.org/damagemodels/dmo#> .\n@prefix dot: <https://w3id.org/dot#> .\n@prefix cdo: <https://w3id.org/damagemodels/cdo#> .\n@prefix props: <https://w3id.org/product/props#> .\n@prefix dasb: <https://w3id.org/damagemodels/d-asb-ing#> .\n@prefix brot: <https://wisib.de/ontologie/brot#> .\n\ninst:Al-Hakam_Hamdan rdf:type prov:Person .\n\ninst:Bend1 rdf:type dmo:StiffnessParameter ;\n\t\t   schema:maxValue 0.9 ;\n           schema:minValue 0.1 ;\n\t\t   dmo:direction \"y\" .\n\ninst:ConstructionReport1 rdf:type dot:ExternalResource .\n\ninst:Crack1 rdf:type cdo:DiagonalCrack ,\n\t\t\t\t\t dot:DamageElement ,\n\t\t\t\t\t dot:StructuralDamage ;\n\t\t\tdot:adjacentDamageElement inst:Crack2 ;\n\t\t\tcdo:crackWidth 3.0 .\n\ninst:Crack2 rdf:type cdo:LongitudinalCrack ,\n\t\t\t\t\t dot:DamageElement ,\n\t\t\t\t\t dot:StructuralDamage ;\n\t\t\tcdo:crackWidth 4.0 .\n\ninst:Crack3 rdf:type cdo:SurfaceCrack ,\n\t\t\t\t\t dot:DamageElement ,\n\t\t\t\t\t dot:Defect ;\n\t\t\tcdo:crackWidth 2.0 .\n\ninst:Crack4 rdf:type cdo:LongitudinalCrack ,\n\t\t\t\t\t dot:DamageElement ,\n\t\t\t\t\t dot:StructuralDamage ;\n\t\t\tcdo:crackWidth 4.0 .\n\ninst:Crack5 rdf:type cdo:DiagonalCrack ,\n\t\t\t\t\t dot:DamageElement ,\n\t\t\t\t\t dot:StructuralDamage ;\n\t\t\tdot:adjacentDamageElement inst:Crack6 ;\n\t\t\tprops:depth 0.07 ;\n\t\t\tcdo:crackWidth 12.0 .\n\ninst:Crack6 rdf:type cdo:TransverseCrack ,\n\t\t\t\t\t dot:DamageElement ,\n\t\t\t\t\t dot:StructuralDamage ;\n\t\t\tdot:adjacentDamageElement inst:Crack7 ;\n\t\t\tprops:depth 0.07 ;\n\t\t\tcdo:crackWidth 14.0 .\n\ninst:Crack7 rdf:type cdo:DiagonalCrack ,\n\t\t\t\t\t dot:DamageElement ,\n\t\t\t\t\t dot:StructuralDamage ;\n\t\t\tprops:depth 0.05 ;\n\t\t\tcdo:crackWidth 12.0 .\n\ninst:D1_1 rdf:type dot:DamageArea ,\n\t\t\t\t   dot:StructuralDamage ;\n\t\t  prov:wasAttributedTo inst:Al-Hakam_Hamdan ;\n\t\t  dasb:hasAssessment inst:D1_1-Assessment ;\n\t\t  dot:hasDocumentation inst:D1_1-Description ;\n\t\t  prov:generatedAtTime \"2019-01-14T13:35:23Z\"^^xsd:dateTime .\n\ninst:D1_1-Assessment rdf:type dasb:DamageAssessment ;\n\t\t\t\t\t dasb:durabilityFactor 2 ;\n\t\t\t\t\t dasb:stabilityFactor 2 ;\n\t\t\t\t\t dasb:trafficSafetyFactor 0 .\n\ninst:D1_1-Description rdf:type dot:Description ;\n\t\t\t\t\t  dasb:BWPRUFkeyword 130041120000000 ,\n\t\t\t\t\t\t\t\t\t\t 130041220000000 ;\n\t\t\t\t\t  dot:descriptionContent \"The spacer gap across is restricted continuosly behind the abutment. The formwork residues are not removed from the joint between the super and substructure.\" .\n\ninst:D1_23 rdf:type dot:DamageArea ,\n\t\t\t\t\tdot:StructuralDamage ;\n\t\t   prov:wasAttributedTo inst:Al-Hakam_Hamdan ;\n           dasb:hasAssessment inst:D1_23-Assessment ;\n\t\t   dot:hasDocumentation inst:D1_23-Description ;\n\t\t   prov:generatedAtTime \"2019-01-14T13:35:23Z\"^^xsd:dateTime .\n\ninst:D1_23-Assessment rdf:type dasb:DamageAssessment ;\n\t\t\t\t\t  dasb:durabilityFactor 2 ;\n\t\t\t\t\t  dasb:stabilityFactor 1 ;\n\t\t\t\t\t  dasb:trafficSafetyFactor 0 .\n\ninst:D1_23-Description rdf:type dot:Description ;\n\t\t\t\t\t   dasb:BWPRUFkeyword 130043231100000 ;\n\t\t\t\t\t   dot:descriptionContent \"Strip foundation has settled <2cm. Different settlements of the retaining walls on the left behind the abutment.\" .\n\ninst:D1_28 rdf:type dot:DamageArea ,\n\t\t\t\t\tdot:StructuralDamage ;\n\t\t   dasb:hasAssessment inst:D1_28-Assessment ;\n\t\t   dot:hasDocumentation inst:D1_28-Description .\n\ninst:D1_28-Assessment rdf:type dasb:DamageAssessment ;\n\t\t\t\t\t  dasb:durabilityFactor 2 ;\n\t\t\t\t\t  dasb:stabilityFactor 1 ;\n\t\t\t\t\t  dasb:trafficSafetyFactor 0 .\n\ninst:D1_28-Description rdf:type dot:Description ;\n\t\t\t\t\t   dasb:BWPRUFkeyword 130043122000000 ;\n                       dot:descriptionContent \"Bearing metal/steel plate is regionally bent on the right of axis number 14. Bending is on all sides of the plate with 1mm engraving.\" .\n\ninst:D1_29 rdf:type dot:DamageArea ,\n\t\t\t\t\tdot:StructuralDamage ;\n\t\t   dasb:hasAssessment inst:D1_29-Assessment ;\n           dot:hasDocumentation inst:D1_29-Description .\n\ninst:D1_29-Assessment rdf:type dasb:DamageAssessment ;\n\t\t\t\t\t  dasb:durabilityFactor 2 ;\n\t\t\t\t\t  dasb:stabilityFactor 1 ;\n\t\t\t\t\t  dasb:trafficSafetyFactor 0 .\n\ninst:D1_29-Description rdf:type dot:Description ;\n\t\t\t\t\t   dasb:BWPRUFkeyword 130043122000000 ;\n                       dot:descriptionContent \"Bearing metal/steel plate under is regionally bent on the left and behind abutment. Bending is on front side of the plate with 1mm engraving.\" .\n\ninst:D1_34 rdf:type dot:DamageArea ,\n\t\t\t\t\tdot:StructuralDamage ;\n\t\t   dasb:hasAssessment inst:D1_34-Assessment ;\n\t\t   dot:hasDocumentation inst:D1_34-Description .\n\ninst:D1_34-Assessment rdf:type dasb:DamageAssessment ;\n\t\t\t\t\t  dasb:durabilityFactor 3 ;\n\t\t\t\t\t  dasb:stabilityFactor 2 ;\n\t\t\t\t\t  dasb:trafficSafetyFactor 2 .\n\ninst:D1_34-Description rdf:type dot:Description ;\n\t\t\t\t\t  dasb:BWPRUFkeyword 130044214000000 ;\n\t\t\t\t\t  dot:descriptionContent \"The steel/metal edge profile is continuously rusted with cross-sectional weakening underside in front of the abutment.\" .\n\ninst:D1_37 rdf:type dot:DamageArea ,\n\t\t\t\t\tdot:StructuralDamage ;\n\t\t   dasb:hasAssessment inst:D1_37-Assessment ;\n\t\t   dot:hasDocumentation inst:D1_37-Description .\n\ninst:D1_37-Assessment rdf:type dasb:DamageAssessment ;\n\t\t\t\t\t  dasb:durabilityFactor 2 ;\n\t\t\t\t\t  dasb:stabilityFactor 1 ;\n\t\t\t\t\t  dasb:trafficSafetyFactor 0 .\n\ninst:D1_37-Description rdf:type dot:Description ;\n\t\t\t\t\t   dasb:BWPRUFkeyword 130044214000000 ;\n                       dot:descriptionContent \"Steel lamella construction with plastic flat profiles with are elatically controlled are fully rusted underside in front of the structure.\" .\n\ninst:D1_38 rdf:type dot:DamageArea ,\n\t\t\t\t\tdot:StructuralDamage ;\n\t\t   dasb:hasAssessment inst:D1_38-Assessment ;\n\t\t   dot:hasDocumentation inst:D1_38-Description .\n\n inst:D1_38-Assessment rdf:type dasb:DamageAssessment ;\n\t\t\t\t\t   dasb:durabilityFactor 3 ;\n\t\t\t\t\t   dasb:stabilityFactor 1 ;\n\t\t\t\t\t   dasb:trafficSafetyFactor 1 .\n\ninst:D1_38-Description rdf:type dot:Description ;\n\t\t\t\t\t   dasb:BWPRUFkeyword 130044214000000 ;\n\t\t\t\t\t   dot:descriptionContent \"Steel/metal travers-box regionally rusted with leaf rust from underside in front of the structure. Travers-box and finishing profile of the anchorage is corroded in the superstructure.\" .\n\ninst:D1_51 rdf:type dot:DamageArea ;\n\t\t   dasb:hasAssessment inst:D1_51-Assessment .\n\ninst:D1_51-Assessment rdf:type dasb:DamageAssessment ;\n\t\t\t\t\t  dasb:durabilityFactor 2 ;\n\t\t\t\t\t  dasb:stabilityFactor 0 ;\n\t\t\t\t\t  dasb:trafficSafetyFactor 0 .\n\ninst:D1_55 rdf:type dot:DamageArea ;\n\t\t   dasb:hasAssessment inst:D1_55-Assessment ;\n\t\t   dmo:hasReducedStiffness inst:ReducedBendingStiffness1 ,\n                                   inst:ReducedShearStiffness1 ;\n\t\t   dot:aggregatesDamageElement inst:Spalling1 ;\n\t\t   dot:aggregatesDamagePattern inst:D1_55-SpallingPattern ;\n\t\t   dot:hasDocumentation inst:D1_55-Description .\n\ninst:D1_55-Assessment rdf:type dasb:DamageAssessment ;\n\t\t\t\t\t  dasb:durabilityFactor 2 ;\n\t\t\t\t\t  dasb:stabilityFactor 1 ;\n\t\t\t\t\t  dasb:trafficSafetyFactor 1 .\n\ninst:D1_55-Description rdf:type dot:Description ;\n\t\t\t\t\t   dasb:BWPRUFkeyword 130047110000000 ;\n\t\t\t\t\t   dot:descriptionContent \"Numerous spalling with exposed reinforcement on the right at the outside between superstructures.\" .\n\ninst:D1_55-SpallingPattern rdf:type dot:DamagePattern ;\n\t\t\t\t\t\t   dot:groupsDamageElement inst:Spalling3 .\n\ninst:D1_6 rdf:type dot:DamageArea ;\n\t\t  dasb:hasAssessment inst:D1_6-Assessment ;\n\t\t  dmo:hasReducedStiffnessModulus inst:FlexMod1 ;\n\t\t  dot:aggregatesDamageElement inst:Crack3 ,\n                                      inst:Crack4 ,\n                                      inst:Spalling4 ;\n\t\t  dot:aggregatesDamagePattern inst:D1_6-CrackPattern ;\n          dot:hasDocumentation inst:D1_6-Description ;\n\t\t  cdo:crackSpacing 0.1 .\n\ninst:D1_6-Assessment rdf:type dasb:DamageAssessment ;\n\t\t\t\t\t dasb:durabilityFactor 3 ;\n\t\t\t\t\t dasb:stabilityFactor 1 ;\n\t\t\t\t\t dasb:trafficSafetyFactor 0 .\n\ninst:D1_6-CrackPattern rdf:type dot:DamagePattern ;\n\t\t\t\t\t   dot:groupsDamageElement inst:Crack1 .\n\ninst:D1_6-Description rdf:type dot:Description ;\n\t\t\t\t\t  dasb:BWPRUFkeyword 130045000000000 ,\n\t\t\t\t\t\t\t\t\t\t 130047110000000 ;\n\t\t\t\t\t  dot:descriptionContent \"Mutiple spalling with exposed reinforcement in front left of the abutment. Additional cracks and cavities due to corrosion and consequential damages due to leaking road joint construction.\" .\n\ninst:D1_63 rdf:type dot:DamageElement ,\n\t\t\t\t\tdot:StructuralDamage ;\n\t\t   dasb:hasAssessment inst:D1_63-Assessment ;\n\t\t   dot:hasDocumentation inst:D1_63-Description .\n\ninst:D1_63-Assessment rdf:type dasb:DamageAssessment ;\n\t\t\t\t\t  dasb:durabilityFactor 2 ;\n\t\t\t\t\t  dasb:stabilityFactor 1 ;\n\t\t\t\t\t  dasb:trafficSafetyFactor 0 .\n\ninst:D1_63-Description rdf:type dot:Description ;\n\t\t\t\t\t   dasb:BWPRUFkeyword 130044214000000 ;\n\t\t\t\t\t   dot:descriptionContent \"Lighting pole is regionally red rusted on the left. Pole base at the connection with superstructure is corroded.\" .\n\ninst:D1_65 rdf:type dot:DamageArea ,\n\t\t\t\t\tdot:Defect ;\n\t\t   dasb:hasAssessment inst:D1_65-Assessment ;\n\t\t   dot:aggregatesDamageElement inst:Defect1 .\n\ninst:D1_65-Assessment rdf:type dasb:DamageAssessment ;\n\t\t\t\t\t  dasb:durabilityFactor 1 ;\n\t\t\t\t\t  dasb:stabilityFactor 0 ;\n\t\t\t\t\t  dasb:trafficSafetyFactor 1 .\n\ninst:D1_7 rdf:type dot:DamageArea ,\n\t\t\t\t   dot:StructuralDamage ;\n\t\t  dasb:hasAssessment inst:D1_7-Assessment ;\n\t\t  dot:aggregatesDamagePattern inst:D1_7-CrackPattern ;\n\t\t  dot:hasDocumentation inst:D1_7-Description .\n\ninst:D1_7-Assessment rdf:type dasb:DamageAssessment ;\n\t\t\t\t\t dasb:durabilityFactor 3 ;\n\t\t\t\t\t dasb:stabilityFactor 1 ;\n\t\t\t\t\t dasb:trafficSafetyFactor 0 .\n\ninst:D1_7-CrackPattern rdf:type dot:DamagePattern ;\n\t\t\t\t\t   dot:groupsDamageElement inst:Crack5 ,\n\t\t\t\t\t\t\t\t\t\t\t   inst:Crack6 ,\n\t\t\t\t\t\t\t\t\t\t\t   inst:Crack7 .\n\ninst:D1_7-Description rdf:type dot:Description ;\n\t\t\t\t\t  dasb:BWPRUFkeyword 130045000000000 ;\n\t\t\t\t\t  dot:descriptionContent \"Continuous cracks from left to right, behind the abutment.\" .\n\ninst:Defect1 rdf:type dot:DamageElement ,\n\t\t\t\t\t  dot:Defect .\n\ninst:FlexMod1 rdf:type dmo:E-Modulus ;\n\t\t\t  dmo:hasReducedMaterialParameter inst:FlexReduction1 ;\n\t\t\t  dmo:direction \"z\" .\n\ninst:FlexReduction1 rdf:type dmo:ReductionParameter ;\n\t\t\t\t\tdmo:reductionValue 0.75 .\n\ninst:ReducedBendingStiffness1 rdf:type dmo:BendingStiffness ;\n\t\t\t\t\t\t\t  dmo:hasStiffnessParameter inst:Bend1 .\n\ninst:ReducedShearStiffness1 rdf:type dmo:ShearStiffness ;\n\t\t\t\t\t\t\tdmo:hasReducedStiffnessModulus inst:ShearMod1 .\n\ninst:Shear1-3-3 rdf:type dmo:ModulusParameter ;\n\t\t\t\tdmo:matrixIndex \"3,3\" ;\n\t\t\t\tdmo:reductionValue 0.8 .\n\ninst:ShearMod1 rdf:type dmo:G-Modulus ;\n\t\t\t   dmo:hasModulusParameter inst:Shear1-3-3 .\n\ninst:Spalling1 rdf:type cdo:Spalling ,\n\t\t\t\t\t\tdot:DamageElement ,\n\t\t\t\t\t\tdot:StructuralDamage ;\n\t\t\t   cdo:spallingArea 1.2 .\n\ninst:Spalling2 rdf:type cdo:Spalling ,\n\t\t\t\t\t\tdot:DamageElement ,\n\t\t\t\t\t\tdot:StructuralDamage ;\n\t\t\t   dot:adjacentDamageElement inst:Spalling3 ;\n\t\t\t   cdo:spallingArea 0.6 .\n\ninst:Spalling3 rdf:type cdo:ReinforcementCorrosion ,\n\t\t\t\t\t\tcdo:Spalling ,\n\t\t\t\t\t\tdot:DamageElement ,\n\t\t\t\t\t\tdot:StructuralDamage ;\n\t\t\t   cdo:spallingArea 0.4 .\n\ninst:Spalling4 rdf:type cdo:Spalling ,\n\t\t\t\t\t\tdot:DamageElement ,\n\t\t\t\t\t\tdot:StructuralDamage ;\n\t\t\t   cdo:spallingArea 1.7 .\n\ninst:StructureAssessment1 rdf:type dasb:StructureAssessment ;\n\t\t\t\t\t\t  dasb:durabilityFactor 3 ;\n\t\t\t\t\t\t  dasb:overallRating 3.4 ;\n\t\t\t\t\t\t  dasb:stabilityFactor 2 ;\n\t\t\t\t\t\t  dasb:trafficSafetyFactor 2 .\n\ninst:abutment-wall-north rdf:type brot:BridgeAbutment ;\n\t\t\t\t\t\t dot:hasDamageArea inst:D1_1 ,\n\t\t\t\t\t\t\t\t\t\t   inst:D1_6 ,\n\t\t\t\t\t\t\t\t\t\t   inst:D1_7 .\n\ninst:bridge-d1 rdf:type brot:Bridge ;\n\t\t\t   brot:contains inst:abutment-wall-north ,\n\t\t\t\t\t\t     inst:plain-with-pot-bearing1 ,\n\t\t\t\t\t\t     inst:plain-with-pot-bearing2 ,\n\t\t\t\t\t\t     inst:strip-foundation1 ,\n\t\t\t\t\t\t     inst:d1-west ,\n\t\t\t\t\t\t     inst:slab1 ,\n\t\t\t\t\t\t     inst:slab2 ;\n\t\t\t   dasb:hasAssessment inst:StructureAssessment1 ;\n\t\t\t   dot:hasDocumentation inst:ConstructionReport1 .\n\ninst:cornice1 rdf:type brot:BridgeRailing ;\n\t\t\t  dot:hasDamageArea inst:D1_55 .\n\ninst:lighting-pole1 rdf:type brot:BridgeIllumination ;\n\t\t\t\t\tdot:hasDamageElement inst:D1_63 .\n\ninst:plain-with-pot-bearing1 rdf:type brot:BridgePotBearings ;\n\t\t\t\t\t\t\t dot:hasDamageArea inst:D1_29 .\n\ninst:plain-with-pot-bearing2 rdf:type brot:BridgePotBearings ;\n\t\t\t\t\t\t\t dot:hasDamageArea inst:D1_28 .\n\ninst:road-joint1 rdf:type brot:Joint ;\n\t\t\t\t dot:hasDamageArea inst:D1_34 .\n\ninst:slab1 rdf:type brot:BridgeGirder ;\n\t\t   dot:hasDamageArea inst:D1_37 ,\n                             inst:D1_38 .\n\ninst:slab2 rdf:type brot:BridgeGirder ;\n\t\t   dot:hasDamageArea inst:D1_65 ,\n                             inst:D1_51 .\n\ninst:strip-foundation1 rdf:type brot:BridgeFoundation ;\n\t\t\t\t\t   dot:hasDamageArea inst:D1_23 .\n\ninst:d1-west rdf:type brot:BridgeSuperStructure ;\n\t\t\t\t\tbrot:contains inst:cornice1 ,\n\t\t\t\t\t\t\t\t  inst:lighting-pole1 ,\n\t\t\t\t\t\t\t\t  inst:road-joint1 ,\n\t\t\t\t\t\t\t\t  inst:slab1 ,\n\t\t\t\t\t\t\t\t  inst:slab2 .",
            "description": "## SPARQL-visualizer for DOT and extensions - first sample dataset\n\nWelcome in this SPARQL-visualizer example for the [Damage Topology Ontology (DOT)](https://w3id.org/dot#) and its [extensions (CDO, DMO and D-ASB-ING)](https://github.com/Alhakam/dot/tree/master/Extension). \n\nTo visualize the sample triples of this second sample dataset, load the triples and the ontologies in a running Stardog database as described below.\n\n### Load sample ABox triples in Stardog\nMake sure you have a Stardog instance running (defaults to port 5820) with an empty database (let's call it 'test'), so that nothing important can be deleted. Then click the \"Switch to triplestore\" button and type in \"http://localhost:5820\" as endpoint and \"test\" as database. If you haven't changed the username and password they both default to \"admin\". Click on \"Wipe graph\" to delete older sample data of the default graph. Then click on \"Load dataset\", to load the sample triples in the Stardog database.\n\n### Load DOT ontology (and extensions) in Stardog\nAs most queries in the following tabs use DOT (and extensions) for reasoning, the ontology has to be available in the Stardog database created earlier. Add the [DOT ontology](https://raw.githubusercontent.com/Alhakam/DamageOntology/master/dot.ttl) and its [extensions](https://github.com/Alhakam/dot/tree/master/Extension) to a named graph `http://ontologies.org/dot/` in your [running Stardog database](localhost:5820)\n\n## Second dataset: Visualize all damaged components\n\nThe second example dataset is more elaborate than the first one and uses all terminology from DOT and some terminology from its extensions. \n\nThis first query visualizes all components (e.g.building elements or bridge elements) that are affected by a damage (`dot:DamageArea` or `dot:DamageElement`).\n\nWithout reasoning, the query will only return the asserted triples that contain instances of `dot:DamageArea` and `dot:DamageElement`. These instances are directly connected to a construction component according to one of the five modeling methods.\n\nWith an active reasoner, additional triples are returned that contain instances of `dot:DamageElement` that are aggregated in a `dot:DamageArea`.\n\n** NOTE!** Some of these tabs (incl. this one) demand the use of reasoning. Do not forget to turn reasoning on in the query component of the SPARQL-visualizer (lower right hand corner). If the query returns no results, press the \"Reset\" button in the query component and reactivate \"Reasoning\"."
        },
        {
            "title": "2b: SELECT all damaged components (with reasoning)",
            "query": "PREFIX dot: <https://w3id.org/dot#>\n\nSELECT ?component ?hasDamage ?damage ?damagePattern\nWHERE {\n  \t?component ?hasDamage ?damage .\n  \tFILTER (?hasDamage IN (dot:hasDamageArea , dot:hasDamageElement)) .\n  \n  \tOPTIONAL { ?damagePattern dot:groupsDamageElement ?damage }\n  \tOPTIONAL { ?damage dot:aggregatesDamagePattern ?damagePattern }\n}",
            "triples": "",
            "description": "This query SELECTS all components (e.g.building elements or bridge elements) that are affected by an instance of `dot:DamageArea` or `dot:DamageElement`. \n\nWith an active reasoner, additional instances of `dot:DamageElement` that are agreggated in a `dot:DamageArea` will be returned, as they are now inferred to be directly connected to the damaged construction component. If available, the query will also return the `dot:DamagePattern` instance that is aggregated by the `dot:DamageArea` OR that is grouping individual `dot:DamageElement` instances. **Note:** If this query would be used without reasoning, it would not return `dot:DamageElement` instances that are defined using modeling method 3, 4 and 5.\n\nThe returned variables are:\n- ?component: The affected construction component\n- ?hasDamage: the relation between the component and the `dot:DamageArea` or `dot:DamageElement`\n- ?damage: the damaging elements, in this case instances of `dot:DamageArea` or `dot:DamageElement`\n- ?damagePattern: the optional `dot:DamagePattern` that is either aggregated by a `dot:DamageArea` or that is grouping individual `dot:DamageElement` instances.\n\n** NOTE!** Some of these tabs (incl. this one) demand the use of reasoning. Do not forget to turn reasoning on in the query component of the SPARQL-visualizer (lower right hand corner). If the query returns no results, press the \"Reset\" button in the query component and reactivate \"Reasoning\".",
            "reasoning": true
        },
        {
            "title": "2c: SELECT all structurally damaged components (with reasoning)",
            "query": "PREFIX dot: <https://w3id.org/dot#>\n\nSELECT ?component ?hasDamage ?structuralDamage \nWHERE {\n  \t{\n      \t# dot:DamageElement or dot:DamageArea\n        ?component ?hasDamage ?structuralDamage.\n        ?structuralDamage rdf:type dot:StructuralDamage .\n        FILTER  (?hasDamage IN (dot:hasDamageArea , dot:hasDamageElement))\n \t } UNION {\n      \t# dot:DamagePattern\n     \t?component dot:hasDamageArea ?damageArea .\n      \t?damageArea ?hasDamage ?structuralDamage .\n      \tFILTER (?hasDamage = dot:aggregatesDamagePattern)\n      \t?structuralDamage rdf:type dot:StructuralDamage .\n     }\n}\nORDER BY ?component",
            "triples": "",
            "description": "This query SELECTS all components (e.g.building elements or bridge elements) that are affected by damages (instances of `dot:DamageArea`, `dot:DamageElement` or `dot:DamagePattern`) that affect the structural capability. Therefore, the above damage instances that are also of class `dot:StructuralDamage` are queried. By using reasoning, we can also find instances of `dot:DamageElement` and `dot:DamagePattern` aggregated in a `dot:DamageArea`\n\nThe returned variables are:\n- ?component: The affected component (in this example instances of `brot:BridgeElement`)\n- ?structuralDamage: Instances of `dot:StructuralDamage` related to the `?component`\n\n** NOTE!** Some of these tabs (incl. this one) demand the use of reasoning. Do not forget to turn reasoning on in the query component of the SPARQL-visualizer (lower right hand corner). If the query returns no results, press the \"Reset\" button in the query component and reactivate \"Reasoning\".",
            "reasoning": true
        },
        {
            "title": "2d: SELECT all components with an undefined damage (with reasoning)",
            "query": "PREFIX dot: <https://w3id.org/dot#>\n\nSELECT ?component ?hasDamage ?undefinedDamage \nWHERE {\n    # component should have at least one dot:DamageArea, dot:DamageElement or dot:DamagePattern that is not of class dot:Defect\n    {\n      \t?component ?hasDamage ?undefinedDamage.\n    \tFILTER (?hasDamage IN (dot:hasDamageArea , dot:hasDamageElement))\n      \tFILTER NOT EXISTS {\n          ?undefinedDamage dot:aggregatesDamageElement|dot:aggregatesDamagePattern ?subDamage .\n        }\n    } UNION {\n      \t?component dot:hasDamageArea ?damageArea1 .\n      \t?damageArea1 ?hasDamage ?undefinedDamage .\n      \tFILTER (?hasDamage = dot:aggregatesDamagePattern)\n      \tFILTER NOT EXISTS {\n          ?undefinedDamage dot:groupsDamageElement ?subDamage .\n        }\n    }\n  \tFILTER NOT EXISTS { ?undefinedDamage a dot:Defect }\n  \t# component has no damage individual that is of class dot:StructuralDamage \n  \tFILTER NOT EXISTS { \n        {\n            # dot:DamageElement or dot:DamageArea\n            ?component ?hasStructuralDamage ?structuralDamage.\n            FILTER (?hasStructuralDamage IN (dot:hasDamageArea , dot:hasDamageElement))\n \t \t} UNION {\n            # dot:DamagePattern\n            ?component dot:hasDamageArea ?damageArea .\n            ?damageArea ?hasStructuralDamage ?structuralDamage .\n            FILTER (?hasStructuralDamage = dot:aggregatesDamagePattern)\n     \t}\n      \t?structuralDamage a dot:StructuralDamage .\n    }\n}\nORDER BY ?component",
            "triples": "",
            "description": "This query SELECTS all components (e.g.building elements or bridge elements) that are not affected by a known `dot:StructuralDamage` and is affected by at least one instance of `dot:DamageElement`, `dot:DamageArea` or `dot:DamagePattern` that is neither an instance of `dot:Defect` or `dot:StructuralDamage`.\n\nWith the use of this query (with reasoning), it's possible to quickly find damaged components of which the modeled damages are not explicitly defined as being structural or not. A certified engineer can then add the correct class to these undefined damage instances.\n\nThe returned variables are:\n- ?component: The affected component (in this example instances of `brot:BridgeElement`)\n- ?hasDamage: the relation towards the undefined damage instance\n- ?undefinedDamage: Instances of `dot:DamageElement`, `dot:DamagePattern` or `dot:DamageArea` that are not classfied as `dot:StructuralDamage` or `dot:Defect`.\n\n** NOTE!** Some of these tabs (incl. this one) demand the use of reasoning. Do not forget to turn reasoning on in the query component of the SPARQL-visualizer (lower right hand corner). If the query returns no results, press the \"Reset\" button in the query component and reactivate \"Reasoning\".",
            "reasoning": true
        },
        {
            "title": "2e: SELECT specific inspection descriptions (with reasoning)",
            "query": "PREFIX dot: <https://w3id.org/dot#>\n\nSELECT ?component ?damage ?description\nWHERE {\n  {\n      # query for dot:DamageElement and dot:DamageArea\n      ?component dot:hasDamage ?damage .\n  } UNION {\n      # query for dot:DamagePattern\n      ?component dot:hasDamageArea ?damageArea .\n      ?damageArea dot:aggregatesDamagePattern ?damage .\n  }\n  ?damage dot:hasDocumentation ?documentation.\n  ?documentation dot:descriptionContent ?description.\n  FILTER REGEX (?description, \"spalling\")\n}",
            "triples": "",
            "description": "This query SELECTS all damaged components with connected damage instances (`dot:DamageElement`, `dot:DamageArea` or `dot:DamagePattern`) that contain in one of their related descriptions the string \"spalling\". Reasoning is needed to find all `dot:DamageElement` instances that are grouped in a `dot:DamageArea` and/or `dot:DamagePattern`. Additionally, reasoning is also needed to find the `dot:DamageArea` and `dot:DamageElement` instances via the superproperty `dot:hasDamage`.\n\nThe returned variables are:\n- ?component: damaged component \n- ?damage: instance of `dot:DamageElement, `dot:DamageArea` or `dot:DamagePattern`\n- ?description: The textual content of an instance of `dot:Description` that is related to the queried ?damage variable\n\n** NOTE!** Some of these tabs (incl. this one) demand the use of reasoning. Do not forget to turn reasoning on in the query component of the SPARQL-visualizer (lower right hand corner). If the query returns no results, press the \"Reset\" button in the query component and reactivate \"Reasoning\".",
            "reasoning": true
        },
        {
            "title": "2f: SELECT all cracks wider then 3 mm (with reasoning)",
            "query": "PREFIX dot: <https://w3id.org/dot#>\nPREFIX cdo: <https://w3id.org/damagemodels/cdo#>\nPREFIX props: <https://w3id.org/product/props#>\nPREFIX inst: <http://ex.org/alhak/data/D1#>\n\nSELECT ?damageElement ?crackType ?width WHERE {\n\tBIND(inst:D1_6 AS ?damageArea)\n  \t?damageArea dot:aggregatesDamageElement ?damageElement .\n  \t?damageElement rdf:type ?crackType.\n  \tGRAPH <http://ontologies.org/dot/>{\n    \t?crackType rdfs:subClassOf cdo:Crack .\n    }\n  \tFILTER (?crackType != cdo:Crack)\n  \t?damageElement cdo:crackWidth ?width.\n  \tFILTER (?width > 3)\n}",
            "triples": "",
            "description": "This query SELECTS all cracks (instances of `cdo:Crack`) that are aggregated in a specific instance of `dot:DamageArea` (in this case `inst:D1_6`) and that have a crack width of more than 3 mm. It uses terminology from the CDO (Concrete Damage Ontology) which is an extension of DOT.\n\nThe returned variables are:\n- ?damageElement: The manifested damage as instance of `dot:DamageElement`\n- ?crackType: The asserted CDO crack class\n- ?width: The crack width (in mm)\n\n** NOTE!** Some of these tabs (incl. this one) demand the use of reasoning. Do not forget to turn reasoning on in the query component of the SPARQL-visualizer (lower right hand corner). If the query returns no results, press the \"Reset\" button in the query component and reactivate \"Reasoning\".",
            "reasoning": true
        },
        {
            "title": "2g: SELECT the avarage stability factor of damages of one element (no reasoning)",
            "query": "PREFIX dot: <https://w3id.org/dot#>\nPREFIX brot: <https://wisib.de/ontologie/brot#>\nPREFIX dasb: <https://w3id.org/damagemodels/d-asb-ing#>\nPREFIX inst: <http://ex.org/alhak/data/D1#>\n\nSELECT ?bridge ?componentType (MAX(?sFactor) AS ?maxSFactor) (MAX(?dFactor) AS ?maxDFactor) (MAX(?tFactor) AS ?maxTFactor)\nWHERE {\n  ?bridge a brot:Bridge .\n  {\n    # directly connected components to bridge\n    ?bridge brot:contains ?component .\n  } UNION {\n    # components connected to bridge superstructure (e.g. lane)\n    ?bridge brot:contains ?superstructure .\n    ?superstructure brot:contains ?component .\n  }\n  ?component a ?componentType .\n  FILTER (?componentType != owl:Thing)\n  FILTER (?componentType != brot:BridgeElement)\n  ?component dot:hasDamageArea|dot:hasDamageElement ?damage.\n  ?damage dasb:hasAssessment ?assessment.\n  ?assessment dasb:stabilityFactor ?sFactor ;\n              dasb:durabilityFactor ?dFactor ;\n              dasb:trafficSafetyFactor ?tFactor .\n} GROUP BY ?componentType ?bridge",
            "triples": "",
            "description": "This query calculates the maximum value of the structural assessment variables 'stability factor', 'durability factor' and 'traffic safety factor' from all damages that are affecting bridge components of the same type per individual bridge. These three values per bridge component type can then be used to calculate the 'stability factor', 'durability factor' and 'traffic safety factor' of each bridge as a whole.\n\nThe returned variables are:\n- ?bridge: the bridge in question\n- ?componentType: the type of bridge component \n- ?maxSFactor: the max stability factor of each `dot:DamageArea` or `dot:DamageElement` connected to each bridge component of a certain component type\n- ?maxDFactor: the max durability factor of each `dot:DamageArea` or `dot:DamageElement` connected to each bridge component of a certain component type\n- ?maxTFactor: the max traffic safety factor of each `dot:DamageArea` or `dot:DamageElement` connected to each bridge component of a certain component type\n\nThis query does **not** need reasoning."
        }
    ]
}